//=============================================================================
//
// fade.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "fade.h"
#include "2dpolygon.h"

//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CFade::CFade()
{
	m_pFade = nullptr;
	m_FadeColor = D3DXCOLOR(0.0f,0.0f,0.0f,1.0f);
	m_bFadeUse = true;
	m_bFadeEnd = false;
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CFade::~CFade()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CFade::Init()
{
	//Fade
	m_pFade = new C2DPolygon;
	if (FAILED(m_pFade->Init()))
	{
		return -1;
	}
	m_pFade->SetDiagonalLine(SCREEN_WIDTH, SCREEN_HEIGHT);
	D3DXVECTOR3 pos = D3DXVECTOR3(SCREEN_WIDTH * 0.5f, SCREEN_HEIGHT * 0.5f, 0.0f);
	m_pFade->SetPos(pos);
	m_pFade->SetColor(m_FadeColor);
	m_pFade->SetPolygon();

	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CFade::Uninit()
{
	if (m_pFade != nullptr)
	{
		m_pFade->Uninit();
		delete m_pFade;
		m_pFade = nullptr;
	}
}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CFade::Update()
{
	FadeOutIn();
	m_pFade->Update();
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CFade::Draw()
{
	m_pFade->Draw();
}

//*****************************************************************************
// フェードの状態更新
//*****************************************************************************
void CFade::FadeOutIn()
{
	if (m_bFadeUse)
	{
		m_FadeColor.a += 0.02f;

		if (m_FadeColor.a > 1.0f)
		{
			m_FadeColor.a = 1.0f;
			m_bFadeUse = false;
			m_bFadeEnd = true;
		}
	}
	else if (m_FadeColor.a > 0.0f)
	{
		m_FadeColor.a -= 0.02f;
		m_bFadeEnd = false;

		if (m_FadeColor.a < 0.0f)
		{
			m_FadeColor.a = 0.0f;
		}
	}

	m_pFade->SetColor(m_FadeColor);
	m_pFade->SetPolygon();
}
