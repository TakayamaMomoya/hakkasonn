//=============================================================================
//
// ui.cpp
// Author : koduna hirohito
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "ui.h"
#include "2dpolygon.h"


//*****************************************************************************
// コンストラクタ
//*****************************************************************************
CUI::CUI()
{
	m_nUiNumber = 0;
	m_pUiPolygon = nullptr;
}

//*****************************************************************************
// デストラクタ
//*****************************************************************************
CUI::~CUI()
{
}

//*****************************************************************************
// 初期化
//*****************************************************************************
HRESULT CUI::Init()
{
	m_nUiNumber = 0;
	m_pUiPolygon = nullptr;
	return S_OK;
}

//*****************************************************************************
// 終了処理
//*****************************************************************************
void CUI::Uninit()
{
	if (m_pUiPolygon == nullptr)
	{
		return;
	}

	for (int nCnt = 0; nCnt < m_nUiNumber; nCnt++)
	{
		m_pUiPolygon[nCnt].Uninit();
	}

	delete[] m_pUiPolygon;
	m_pUiPolygon = nullptr;

}

//*****************************************************************************
// 更新処理
//*****************************************************************************
void CUI::Update()
{
	/*if (m_pUiPolygon != nullptr)
	{*/
		for (int nCnt = 0; nCnt < m_nUiNumber; nCnt++)
		{
			m_pUiPolygon[nCnt].Update();
		}
	//}
}

//*****************************************************************************
// 描画処理
//*****************************************************************************
void CUI::Draw()
{
	for (int nCnt = 0; nCnt < m_nUiNumber; nCnt++)
	{
		m_pUiPolygon[nCnt].Draw();
	}
}

//*****************************************************************************
// UIの作成
//*****************************************************************************
C2DPolygon *CUI::CreateUi(int nUiNumber)
{
	m_nUiNumber = nUiNumber;
	m_pUiPolygon = new C2DPolygon[nUiNumber];

	for (int nCnt = 0; nCnt < nUiNumber; nCnt++)
	{
		if (FAILED(m_pUiPolygon[nCnt].Init()))
		{
			return nullptr;
		}
	}

	return m_pUiPolygon;
}